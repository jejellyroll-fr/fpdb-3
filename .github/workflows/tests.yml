name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']
        exclude:
          # Exclude Python 3.12 on macOS for now if there are compatibility issues
          - os: macos-latest
            python-version: '3.12'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        python -m pip install --upgrade pip
        pip install uv

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e .[test]

    - name: Lint with ruff
      run: |
        uv pip install ruff
        uv run ruff check .

    - name: Create config directory (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir -p C:/Users/runneradmin/AppData/Roaming/fpdb
        cp HUD_config.xml C:/Users/runneradmin/AppData/Roaming/fpdb/

    - name: Create config directory (Unix)
      if: runner.os != 'Windows'
      run: |
        mkdir -p ~/.fpdb
        cp HUD_config.xml ~/.fpdb/

    - name: Run tests
      run: |
        # Run all tests except the problematic HUD_main test
        uv run pytest -v --tb=short --ignore=test/test_HUD_main.py test/ test_*.py

    - name: Run tests with coverage (Ubuntu only)
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      run: |
        uv run pytest --cov=. --cov-report=xml --cov-report=html --ignore=test/test_HUD_main.py test/ test_*.py

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
